[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2025-01-08 14:04:27.008981",
  "module": "Property Management Solution",
  "name": "On Sale price",
  "script": "frappe.ui.form.on('Property', {\n    after_insert: function(frm) {\n        if (frm.doc.status === \"On Sale\" && frm.doc.price_per_meter) {\n            const total_price = frm.doc.price_per_meter * frm.doc.builtup_area;\n            \n            frappe.call({\n                method: \"frappe.client.set_value\",\n                args: {\n                    doctype: \"Property\",\n                    name: frm.doc.name,\n                    fieldname: \"total_price\",\n                    value: total_price\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        frappe.msgprint({\n                            title: __('Success'),\n                            message: __('Total price has been updated to: ') + total_price,\n                            indicator: 'green'\n                        });\n                        frm.reload_doc(); // Reload the form to reflect changes\n                    }\n                }\n            });\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 0,
  "modified": "2025-01-03 23:43:46.472089",
  "module": "Property Management Solution",
  "name": "On lease price",
  "script": "frappe.ui.form.on('Property', {\n    after_insert: function(frm) {\n        if (frm.doc.status === \"On Lease\" && frm.doc.price_per_month_day) {\n            const total_price = 40 * frm.doc.price_per_month_day;\n\n            frappe.call({\n                method: \"frappe.client.set_value\",\n                args: {\n                    doctype: \"Property\",\n                    name: frm.doc.name,\n                    fieldname: \"total_price\",\n                    value: total_price\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        frappe.msgprint({\n                            title: __('Success'),\n                            message: __('Total price has been updated to: ') + total_price,\n                            indicator: 'green'\n                        });\n                        frm.reload_doc(); // Reload the form to reflect changes\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Dashboard Chart",
  "enabled": 1,
  "modified": "2024-12-17 17:20:32.423010",
  "module": "Property Management Solution",
  "name": "Set Chart User",
  "script": "frappe.ui.form.on('Dashboard Chart', {\n  onload: function (frm) {\n    if (frm.doc.chart_name === \"Target Chart\") {\n      frm.set_value(\"filters\", JSON.stringify({ user_email: frappe.session.user }));\n    }\n  },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 0,
  "modified": "2024-12-05 13:41:15.006012",
  "module": "Property Management Solution",
  "name": "Rent or Sale?",
  "script": "frappe.ui.form.on('Property', {\n\tstatus: function (frm) {\n        if (frm.doc.status === 'On lease' || frm.doc.status === 'Off Lease in 3 Months') {\n            // Show \"price per month/day\"\n            frm.set_df_property('price_per_month_day', 'hidden', 0);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        } else if (frm.doc.status === 'On Sale' || frm.doc.status === 'Sold' || frm.doc.status === 'Managed for customer') {\n            // Show \"price per meter\"\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 0);\n        } else {\n            // Hide both if no match\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Unit",
  "enabled": 1,
  "modified": "2025-01-04 17:30:48.590926",
  "module": "Property Management Solution",
  "name": "Unit Rent or Sale?",
  "script": "frappe.ui.form.on('Unit', {\n\tstatus: function (frm) {\n        if (frm.doc.status === 'On Lease' || frm.doc.status === 'Off Lease in 3 Months') {\n            // Show \"price per month/day\"\n            frm.set_df_property('price_per_month_day', 'hidden', 0);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        } else if (frm.doc.status === 'On Sale' || frm.doc.status === 'Sold' || frm.doc.status === 'Managed for customer') {\n            // Show \"price per meter\"\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 0);\n        } else {\n            // Hide both if no match\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2025-01-21 16:12:11.949648",
  "module": "Property Management Solution",
  "name": "Reserve Button",
  "script": "frappe.ui.form.on('Property', {\n    refresh: function(frm) {\n        // Add a custom button for Reservation\n        frm.add_custom_button(__('Reserve'), function() {\n            redirect_to_reservation_form(frm);\n        });\n\n        // Add a custom button for Cancel Reservation\n        //frm.add_custom_button(__('Cancel Reservation'), function() {\n        //    cancel_existing_reservation(frm);\n        //});\n    }\n});\n\nfunction redirect_to_reservation_form(frm) {\n    // Redirect to a new Reservation Form document\n    frappe.new_doc('Reservation form', {\n        property_name: frm.doc.name,\n    });\n}\n\nfunction cancel_existing_reservation(frm) {\n    frappe.call({\n        method: 'frappe.client.get_list',\n        args: {\n            doctype: 'Reservation form',\n            filters: {\n                property_name: frm.doc.name,\n                status: 'Approved'\n            },\n            fields: ['name', 'status']\n        },\n        callback: function(response) {\n            if (response.message && response.message.length > 0) {\n                const reservation = response.message[0];\n\n                console.log(`Reservation found: ${JSON.stringify(reservation)}`);\n\n                // Update the reservation status to \"Canceled\"\n                frappe.call({\n                    method: 'frappe.db.set_value',\n                    args: {\n                        doctype: 'Reservation form',\n                        name: reservation.name,\n                        fieldname: 'status',\n                        value: 'Canceled'\n                    },\n                    callback: function() {\n                        frappe.msgprint({\n                            message: __('Reservation canceled successfully.'),\n                            indicator: 'green',\n                            alert: true\n                        });\n\n                        // Cancel the Property document if not already canceled\n                        if (frm.doc.docstatus !== 2) {\n                            frappe.call({\n                                method: 'frappe.client.cancel',\n                                args: {\n                                    doctype: 'Property',\n                                    name: frm.doc.name\n                                },\n                                callback: function() {\n                                    frappe.msgprint({\n                                        message: __('Property has been canceled.'),\n                                        indicator: 'green',\n                                        alert: true\n                                    });\n                                    frm.reload_doc();\n                                }\n                            });\n                        } else {\n                            frappe.msgprint({\n                                message: __('Property is already canceled.'),\n                                indicator: 'orange',\n                                alert: true\n                            });\n                        }\n                    },\n                    error: function(err) {\n                        console.error('Error canceling reservation:', err);\n                    }\n                });\n            } else {\n                frappe.msgprint({\n                    message: __('No active reservation exists for this property.'),\n                    indicator: 'orange',\n                    alert: true\n                });\n            }\n        },\n        error: function(err) {\n            console.error('Error fetching reservations:', err);\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2024-12-05 13:41:29.472273",
  "module": "Property Management Solution",
  "name": "Maps",
  "script": "frappe.ui.form.on('Property', {\n\trefresh(frm) {\n\t\tfrm.fields_dict.location.map.setView([frm.doc.latitude, frm.doc.longitude], 13);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 0,
  "modified": "2024-12-25 16:44:21.022078",
  "module": "Property Management Solution",
  "name": "Facilities",
  "script": "frappe.ui.form.on('Property', {\n    facilities: function(frm) {\n        // Get the selected values from the \"facilities\" field\n        let selected_facilities = frm.doc.facilities || [];\n\n        // Define the condition for showing the specific field\n        let should_show = selected_facilities.some(facility => facility.value === 'Garage'); \n\n        // Update the visibility of the target field\n        frm.set_df_property('Garage Price', 'hidden', 0);\n    }\n});\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 0,
  "modified": "2024-12-30 13:59:48.072967",
  "module": "Property Management Solution",
  "name": "For Canellation of property",
  "script": "frappe.ui.form.on('Property', {\n    status: function(frm) {\n        // Check if 'for_cancellation' is empty and 'status' is set\n        if (frm.doc.for_cancellation == \"Available\" && frm.doc.status) {\n            frm.set_value('for_cancellation', frm.doc.status);\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2025-01-09 02:54:32.538077",
  "module": "Property Management Solution",
  "name": "Calculate Total Price",
  "script": "frappe.ui.form.on('Property', {\n    refresh: function(frm) {\n        console.log(\"Form refreshed\");\n        calculate_total_price(frm); // Call the main calculation function\n    },\n    table_zcpl_add: function(frm, cdt, cdn) {\n        console.log(\"Row added\");\n        calculate_total_price(frm);\n    },\n    table_zcpl_remove: function(frm, cdt, cdn) {\n        console.log(\"Row removed\");\n        calculate_total_price(frm);\n    },\n    builtup_area: function(frm) { // Add triggers for area and price per meter\n        calculate_total_price(frm);\n    },\n    price_per_meter: function(frm) {\n        calculate_total_price(frm);\n    },\n    unit_price: function(frm) {\n        calculate_total_price(frm);\n    }\n});\n\nfrappe.ui.form.on('Project Facility', {\n    facility: function(frm, cdt, cdn) {\n        console.log(\"Facility changed\");\n        calculate_total_price(frm);\n    },\n    facility_price: function(frm, cdt, cdn) {\n        console.log(\"Price changed\");\n        calculate_total_price(frm);\n    }\n});\n\nfunction calculate_total_price(frm) {\n    let total_facilities_price = 0;\n    let base_price = 0;\n    let total_price = 0;\n\n    console.log(\"Calculating total...\");\n\n    // Calculate total facilities price (same as before)\n    if (frm.doc.table_zcpl && frm.doc.table_zcpl.length) {\n        frm.doc.table_zcpl.forEach(function(row) {\n            total_facilities_price += flt(row.facility_price) || 0;\n        });\n    }\n\n    console.log(\"Total Facilities Price:\", total_facilities_price);\n    frm.set_value('total_facilities_price', total_facilities_price);\n    frm.refresh_field('total_facilities_price');\n\n    // Calculate base price (built-up area * price per meter)\n    let built_up_area = flt(frm.doc.builtup_area) || 0;\n    let price_per_meter = flt(frm.doc.price_per_meter) || 0;\n\n    base_price = built_up_area * price_per_meter;\n\n    console.log(\"Built-up Area:\", built_up_area);\n    console.log(\"Price per Meter:\", price_per_meter);\n    console.log(\"Base Price:\", base_price);\n\n    // Calculate final total price\n    total_price = base_price + total_facilities_price;\n\n    console.log(\"Final Total Price:\", total_price);\n    frm.set_value('unit_price',base_price); // Set the value of the new field\n    frm.set_value('total_price', total_price); // Set the value of the new field\n\n    frm.refresh_field('total_price'); // Refresh the new field\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Reservation form",
  "enabled": 1,
  "modified": "2025-01-21 16:29:40.403350",
  "module": "Property Management Solution",
  "name": "Reservation form logic",
  "script": "frappe.ui.form.on('Reservation form', {\n    before_save: function(frm) {\n        if (frm.is_new() || frm.doc.__islocal) {\n            return;\n        }\n\n        // Check if the status is being changed to \"Approved\"\n        if (frm.doc.status === 'Approved' && frm.doc.__unsaved && frm.doc.__last_sync_status !== 'Approved') {\n            update_property_status(frm);\n        }\n    }\n});\n\nfunction update_property_status(frm) {\n    frappe.call({\n        method: 'frappe.client.set_value',\n        args: {\n            doctype: 'Property',\n            name: frm.doc.property_name,\n            fieldname: 'status',\n            value: 'Reserved'\n        },\n        callback: function(response) {\n            if (response.message) {\n                frappe.msgprint({\n                    message: __('Property status updated to Reserved.'),\n                    indicator: 'green',\n                    alert: true\n                });\n            } else {\n                frappe.msgprint({\n                    message: __('Failed to update property status.'),\n                    indicator: 'red',\n                    alert: true\n                });\n            }\n        }\n    });\n}",
  "view": "Form"
 }
]