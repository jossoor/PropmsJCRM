[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Dashboard Chart",
  "enabled": 1,
  "modified": "2024-12-16 18:23:55.048262",
  "module": "Property Management Solution",
  "name": "Set Chart User",
  "script": "frappe.dashboard.Chart.prototype.refresh_chart = function () {\n  if (this.chart_name === \"Target Chart\") {\n    this.filters.user_email = frappe.session.user;\n    this.refresh(); // Trigger chart refresh\n  }\n};\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 0,
  "modified": "2024-12-05 13:41:15.006012",
  "module": "Property Management Solution",
  "name": "Rent or Sale?",
  "script": "frappe.ui.form.on('Property', {\n\tstatus: function (frm) {\n        if (frm.doc.status === 'On lease' || frm.doc.status === 'Off Lease in 3 Months') {\n            // Show \"price per month/day\"\n            frm.set_df_property('price_per_month_day', 'hidden', 0);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        } else if (frm.doc.status === 'On Sale' || frm.doc.status === 'Sold' || frm.doc.status === 'Managed for customer') {\n            // Show \"price per meter\"\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 0);\n        } else {\n            // Hide both if no match\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Unit",
  "enabled": 1,
  "modified": "2024-12-05 13:40:39.909585",
  "module": "Property Management Solution",
  "name": "Unit Rent or Sale?",
  "script": "frappe.ui.form.on('Unit', {\n\tstatus: function (frm) {\n        if (frm.doc.status === 'On Lease' || frm.doc.status === 'Off Lease in 3 Months') {\n            // Show \"price per month/day\"\n            frm.set_df_property('price_per_month_day', 'hidden', 0);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        } else if (frm.doc.status === 'On Sale' || frm.doc.status === 'Sold' || frm.doc.status === 'Managed for customer') {\n            // Show \"price per meter\"\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 0);\n        } else {\n            // Hide both if no match\n            frm.set_df_property('price_per_month_day', 'hidden', 1);\n            frm.set_df_property('price_per_meter', 'hidden', 1);\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2024-12-05 13:40:56.440099",
  "module": "Property Management Solution",
  "name": "Reserve Button",
  "script": "frappe.ui.form.on('Property', {\n    refresh: function(frm) {\n        // Add a custom button for Reservation\n        frm.add_custom_button(__('Reserve'), function() {\n            check_existing_reservation_and_open_dialog(frm);\n        });\n\n        // Add a custom button for Cancel Reservation\n        frm.add_custom_button(__('Cancel Reservation'), function() {\n            cancel_existing_reservation(frm);\n        });\n    }\n});\n\nfunction check_existing_reservation_and_open_dialog(frm) {\n    // Check if a reservation already exists for this property\n    frappe.call({\n        method: 'frappe.client.get_list',\n        args: {\n            doctype: 'Reservation',\n            filters: {\n                property_unit: frm.doc.name,\n                status: 'Reserve'\n            },\n            fields: ['name']\n        },\n        callback: function(response) {\n            if (response.message && response.message.length > 0) {\n                frappe.msgprint({\n                    message: __('A reservation already exists for this property.'),\n                    indicator: 'orange',\n                    alert: true\n                });\n            } else {\n                open_reservation_dialog(frm);\n            }\n        }\n    });\n}\n\nfunction open_reservation_dialog(frm) {\n    // Create a dialog for the Reservation Doctype\n    const dialog = new frappe.ui.Dialog({\n        title: __('Make a Reservation'),\n        fields: [\n            {\n                label: 'Property',\n                fieldname: 'property',\n                fieldtype: 'Link',\n                options: 'Property',\n                default: frm.doc.name,\n                read_only: 1\n            },\n            {\n                label: 'Reserved By',\n                fieldname: 'reserved_by',\n                fieldtype: 'Link',\n                options: 'CRM Lead',\n                reqd: 1 // Make this field mandatory\n            },\n            {\n                label: 'Status',\n                fieldname: 'status',\n                fieldtype: 'Select',\n                options: ['Reserve', 'Cancel'],\n                default: 'Reserve'\n            },\n            {\n                label: 'Reservation Date',\n                fieldname: 'reservation_date',\n                fieldtype: 'Date',\n                default: frappe.datetime.now_date()\n            }\n        ],\n        primary_action_label: __('Submit'),\n        primary_action: function(values) {\n            // Call a server-side method to create the Reservation and update Property\n            frappe.call({\n                method: 'frappe.client.insert',\n                args: {\n                    doc: {\n                        doctype: 'Reservation',\n                        property_unit: values.property,\n                        reserved_by: values.reserved_by,\n                        status: values.status,\n                        reservation_date: values.reservation_date\n                    }\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        frappe.msgprint({\n                            message: __('Reservation created successfully.'),\n                            indicator: 'green',\n                            alert: true\n                        });\n                        // Update the Property status to \"Booked\"\n                        frm.set_value('status', 'Booked');\n                        frm.save();\n                    }\n                }\n            });\n            dialog.hide();\n        }\n    });\n\n    dialog.show();\n}\n\nfunction cancel_existing_reservation(frm) {\n    // Check if a reservation exists for the property\n    frappe.call({\n        method: 'frappe.client.get_list',\n        args: {\n            doctype: 'Reservation',\n            filters: {\n                property_unit: frm.doc.name,\n                status: 'Reserve'\n            },\n            fields: ['name']\n        },\n        callback: function(response) {\n            if (response.message && response.message.length > 0) {\n                const reservation_name = response.message[0].name;\n                // Update the reservation status to \"Cancel\"\n                frappe.call({\n                    method: 'frappe.client.set_value',\n                    args: {\n                        doctype: 'Reservation',\n                        name: reservation_name,\n                        fieldname: 'status',\n                        value: 'Cancel'\n                    },\n                    callback: function() {\n                        frappe.msgprint({\n                            message: __('Reservation canceled successfully.'),\n                            indicator: 'green',\n                            alert: true\n                        });\n                        // Update the Property status to \"Available\"\n                        frm.set_value('status', 'Available');\n                        frm.save();\n                    }\n                });\n            } else {\n                frappe.msgprint({\n                    message: __('No active reservation exists for this property.'),\n                    indicator: 'orange',\n                    alert: true\n                });\n            }\n        }\n    });\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Property",
  "enabled": 1,
  "modified": "2024-12-05 13:41:29.472273",
  "module": "Property Management Solution",
  "name": "Maps",
  "script": "frappe.ui.form.on('Property', {\n\trefresh(frm) {\n\t\tfrm.fields_dict.location.map.setView([frm.doc.latitude, frm.doc.longitude], 13);\n\t}\n})",
  "view": "Form"
 }
]